{"ast":null,"code":"import { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/quarkus/quarkus.service\";\nimport * as i2 from \"@angular/router\";\nexport let UserAttendenceViewComponent = /*#__PURE__*/(() => {\n  class UserAttendenceViewComponent {\n    constructor(quarkusService, changeDetectorRefs, router) {\n      this.quarkusService = quarkusService;\n      this.changeDetectorRefs = changeDetectorRefs;\n      this.router = router;\n      this.displayedColumns = ['Authenticated', 'Date', \"Time\", 'Score', 'Location'];\n      this.tempgreen = \"#32a852\"; // Create 100 users\n\n      console.log(this.router.getCurrentNavigation().extras.state);\n      /**\r\n       * Set the paginator and sort after the view init since this component will\r\n       * be able to query its view for the initialized paginator and sort.\r\n       */\n    }\n\n    ngAfterViewInit() {\n      const users = [];\n      this.quarkusService.getAttendence().subscribe(data => {\n        data.forEach(element => {\n          var date = new Date(Date.parse(element.createdAt));\n          var date_str = date.getDate() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getFullYear();\n          var time_str = date.getHours() + \":\" + date.getMinutes() + \":\" + date.getSeconds();\n          Object.assign(element, {\n            date: date_str\n          });\n          Object.assign(element, {\n            time: time_str\n          });\n          users.push(element);\n          console.log(element);\n          this.dataSource = new MatTableDataSource(users);\n          this.dataSource.paginator = this.paginator;\n          this.dataSource.sort = this.sort;\n        });\n      }); // Assign the data to the data source for the table to render\n    }\n\n    applyFilter(filterValue) {\n      filterValue = filterValue.trim(); // Remove whitespace\n\n      filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n\n      this.dataSource.filter = filterValue;\n    }\n\n  }\n\n  UserAttendenceViewComponent.ɵfac = function UserAttendenceViewComponent_Factory(t) {\n    return new (t || UserAttendenceViewComponent)(i0.ɵɵdirectiveInject(i1.QuarkusService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  UserAttendenceViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UserAttendenceViewComponent,\n    selectors: [[\"app-user-attendence-view\"]],\n    viewQuery: function UserAttendenceViewComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(MatSort, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 0,\n    template: function UserAttendenceViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"user-attendence-view works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\".example-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;min-width:300px}.example-header[_ngcontent-%COMP%]{min-height:64px;padding:8px 24px 0}.mat-form-field[_ngcontent-%COMP%]{font-size:14px;width:100%}.mat-table[_ngcontent-%COMP%]{overflow:auto;max-height:500px}.positive[_ngcontent-%COMP%]{background-color:#00800056}.negative[_ngcontent-%COMP%]{background-color:#ff000060}.example-form[_ngcontent-%COMP%]{background-color:#0000002d;color:#fff;padding:15px}\"]\n  });\n  return UserAttendenceViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}