{"ast":null,"code":"import { MicrophoneComponent } from '../microphone/microphone.component';\nimport { TtsComponent } from '../tts/tts.component';\nimport { isDefined } from '@angular/compiler/src/util';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/interview.service\";\nimport * as i3 from \"keycloak-angular\";\nimport * as i4 from \"../../services/io.service\";\nimport * as i5 from \"../../services/event.service\";\nimport * as i6 from \"../microphone/microphone.component\";\nimport * as i7 from \"../tts/tts.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/material/progress-spinner\";\nimport * as i10 from \"@angular/material/card\";\nimport * as i11 from \"../wave/wave.component\";\nimport * as i12 from \"@angular/material/button\";\n\nfunction InterviewQuestionComponent_mat_spinner_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\");\n  }\n}\n\nfunction InterviewQuestionComponent_mat_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"mat-card\", 3)(1, \"div\")(2, \"mat-card-title\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"titlecase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵelementStart(6, \"mat-card-subtitle\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\")(9, \"app-wave\", 4);\n    i0.ɵɵelementStart(10, \"mat-card-content\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"br\")(13, \"br\");\n    i0.ɵɵelementStart(14, \"mat-card-actions\")(15, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function InterviewQuestionComponent_mat_card_2_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.next();\n    });\n    i0.ɵɵtext(16, \"Next Question\");\n    i0.ɵɵelementEnd()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 7, ctx_r1.heading), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.subheading, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"hight\", ctx_r1.innerHeight * 0.2)(\"width\", ctx_r1.innerWidth * 0.55)(\"lineWidth\", 3)(\"color\", ctx_r1.color);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.text, \" \");\n  }\n}\n\nexport let InterviewQuestionComponent = /*#__PURE__*/(() => {\n  class InterviewQuestionComponent {\n    constructor(router, interviewservice, keycloakservice, ioService, eventService, microphone, tts) {\n      this.router = router;\n      this.interviewservice = interviewservice;\n      this.keycloakservice = keycloakservice;\n      this.ioService = ioService;\n      this.eventService = eventService;\n      this.microphone = microphone;\n      this.tts = tts;\n      this.color = \"#d90202\";\n      this.heading = '';\n      this.subheading = '';\n      this.dataloaded = false;\n      this.text = '';\n      this.isRecording = false;\n\n      if (isDefined(this.interviewservice.questionset)) {\n        let me = this;\n        this.ioService.receiveStream('transcript', function (transcript) {\n          console.log(transcript);\n          me.text += \" \" + transcript;\n        });\n      }\n    }\n\n    ngOnInit() {\n      if (!isDefined(this.interviewservice.questionset)) {\n        console.log('navigating out');\n        this.router.navigate(['']);\n      } else {\n        this.isRecording = false;\n        this.innerWidth = window.innerWidth;\n        this.innerHeight = window.innerHeight;\n        this.dataloaded = false;\n        this.subscription = undefined;\n        this.text = '';\n        this.question = undefined;\n        this.score = undefined;\n        this.questionid = undefined;\n        this.heading = this.interviewservice.questionset.name + ' Interview';\n        this.tts.ngAfterViewInit();\n        this.interviewservice.getCurrentQuestion().subscribe(data => {\n          let me = this;\n          console.log(data);\n\n          if (data.status == 200) {\n            this.questionid = data.body.id;\n            this.subheading = data.body.question.question;\n            this.question = data.body.question;\n            this.dataloaded = true;\n            this.ioService.sendMessage('tts', {\n              text: this.subheading,\n              audio: {\n                language: ''\n              }\n            });\n            this.subscription = this.eventService.audioStopping.subscribe(() => {\n              if (!this.isRecording) {\n                console.log(\"audio stopped playing\");\n                this.microphone.onStart(data.body.question.answer.split(' '));\n                this.isRecording = true;\n              } else {\n                \"audio is already recording\";\n              }\n            });\n          }\n        }, error => {\n          this.router.navigate(['/interviewoutro']);\n        });\n      }\n    }\n\n    next() {\n      this.tts.stopOutput();\n      this.microphone.onStop();\n\n      try {\n        this.subscription.unsubscribe();\n      } catch (_a) {\n        console.log('could not unsub properly');\n      } // if answer is empty score is zero\n\n\n      if (!this.text.replace(/\\s/g, '').length) {\n        this.score = 0;\n        this.interviewservice.updateScore(Number(this.score), this.text, this.questionid).subscribe(() => {\n          this.ngOnInit();\n        });\n      } else {\n        this.interviewservice.getsimilarity(this.question.answer, this.text).subscribe(data => {\n          this.score = data.score;\n          this.interviewservice.updateScore(Number(this.score), this.text, this.questionid).subscribe(() => {\n            this.ngOnInit();\n          });\n        });\n      }\n    }\n\n    ngOnDestroy() {\n      this.tts.stopOutput();\n      this.microphone.onStop();\n\n      try {\n        this.subscription.unsubscribe();\n      } catch (_a) {\n        console.log('could not unsub properly');\n      }\n    }\n\n  }\n\n  InterviewQuestionComponent.ɵfac = function InterviewQuestionComponent_Factory(t) {\n    return new (t || InterviewQuestionComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.InterviewService), i0.ɵɵdirectiveInject(i3.KeycloakService), i0.ɵɵdirectiveInject(i4.IoService), i0.ɵɵdirectiveInject(i5.EventService), i0.ɵɵdirectiveInject(i6.MicrophoneComponent), i0.ɵɵdirectiveInject(i7.TtsComponent));\n  };\n\n  InterviewQuestionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InterviewQuestionComponent,\n    selectors: [[\"app-interview-question\"]],\n    hostBindings: function InterviewQuestionComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"unloaded\", function InterviewQuestionComponent_unloaded_HostBindingHandler() {\n          return ctx.ngOnDestroy();\n        });\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([MicrophoneComponent, TtsComponent])],\n    decls: 3,\n    vars: 2,\n    consts: [[1, \"info-container\"], [4, \"ngIf\"], [\"id\", \"info-card\", \"class\", \"ifo-card\", 4, \"ngIf\"], [\"id\", \"info-card\", 1, \"ifo-card\"], [3, \"hight\", \"width\", \"lineWidth\", \"color\"], [\"mat-raised-button\", \"\", \"color\", \"accent\", \"type\", \"start\", 1, \"button\", 3, \"click\"]],\n    template: function InterviewQuestionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, InterviewQuestionComponent_mat_spinner_1_Template, 1, 0, \"mat-spinner\", 1);\n        i0.ɵɵtemplate(2, InterviewQuestionComponent_mat_card_2_Template, 17, 9, \"mat-card\", 2);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.dataloaded);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataloaded);\n      }\n    },\n    directives: [i8.NgIf, i9.MatProgressSpinner, i10.MatCard, i10.MatCardTitle, i10.MatCardSubtitle, i11.WaveComponent, i10.MatCardContent, i10.MatCardActions, i12.MatButton],\n    pipes: [i8.TitleCasePipe],\n    styles: [\".infro-card[_ngcontent-%COMP%]{max-width:60vw;width:60vw;max-height:80vh;height:80vh;text-align:center}.mat-card-content[_ngcontent-%COMP%]{width:60vw;max-width:inherit;overflow-y:auto;text-align:center}.info-container[_ngcontent-%COMP%]{width:100%;height:80%;display:flex;justify-content:center;align-items:center;text-align:center;margin:0;overflow:hidden}.button[_ngcontent-%COMP%]{margin-right:20px}\"]\n  });\n  return InterviewQuestionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}