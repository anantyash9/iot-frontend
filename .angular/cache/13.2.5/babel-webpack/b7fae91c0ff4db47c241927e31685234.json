{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"keycloak-angular\";\nexport let QuarkusService = /*#__PURE__*/(() => {\n  class QuarkusService {\n    constructor(httpClient, keycloakService) {\n      this.httpClient = httpClient;\n      this.keycloakService = keycloakService;\n      this.isRegistered = false;\n      this.baseurl = \"\";\n      this.getEmployeesUrl = \"api/employee\";\n    }\n\n    register(image) {\n      var form = new FormData();\n      form.append(\"file\", image, \"file\");\n      return this.httpClient.post(this.baseurl + \"api/employee/photo\", form);\n    }\n\n    getProfile() {\n      return this.httpClient.get(this.baseurl + \"api/employee/profile\", {\n        responseType: 'json'\n      });\n    }\n\n    setRegistered(isRegistered) {\n      this.isRegistered = isRegistered;\n    }\n\n    getRegistered() {\n      return this.isRegistered;\n    }\n\n    getAttendence() {\n      return this.httpClient.get(this.baseurl + \"api/employee/attendance\", {\n        responseType: 'json'\n      });\n    }\n\n    getEmployees() {\n      return this.httpClient.get(this.baseurl + this.getEmployeesUrl, {\n        responseType: 'json'\n      });\n    }\n\n  }\n\n  QuarkusService.ɵfac = function QuarkusService_Factory(t) {\n    return new (t || QuarkusService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.KeycloakService));\n  };\n\n  QuarkusService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: QuarkusService,\n    factory: QuarkusService.ɵfac,\n    providedIn: 'root'\n  });\n  return QuarkusService;\n})();","map":null,"metadata":{},"sourceType":"module"}