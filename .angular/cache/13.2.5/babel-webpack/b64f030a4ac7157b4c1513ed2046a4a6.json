{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/quarkus/quarkus.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/button\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nconst _c0 = [\"video\"];\nconst _c1 = [\"canvas\"];\n\nfunction CaptureComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 2);\n    i0.ɵɵelement(2, \"video\", 3, 4)(4, \"canvas\", 5, 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 7)(7, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function CaptureComponent_div_0_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.capture();\n    });\n    i0.ɵɵtext(8, \" Capture Photo and Register \");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"show\", !ctx_r0.isCaptured)(\"hide\", ctx_r0.isCaptured);\n    i0.ɵɵproperty(\"width\", ctx_r0.WIDTH)(\"height\", ctx_r0.HEIGHT);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassProp(\"show\", !ctx_r0.isCaptured)(\"hide\", !ctx_r0.isCaptured);\n    i0.ɵɵproperty(\"width\", ctx_r0.WIDTH)(\"height\", ctx_r0.HEIGHT);\n  }\n}\n\nfunction CaptureComponent_div_1_mat_spinner_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-spinner\", 12);\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"diameter\", 100)(\"strokeWidth\", 10);\n  }\n}\n\nfunction CaptureComponent_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1, \" Thank you for registering. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction CaptureComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"div\");\n    i0.ɵɵtemplate(2, CaptureComponent_div_1_mat_spinner_2_Template, 1, 2, \"mat-spinner\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, CaptureComponent_div_1_div_3_Template, 2, 0, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isRegistered);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isRegistered);\n  }\n}\n\nexport let CaptureComponent = /*#__PURE__*/(() => {\n  class CaptureComponent {\n    constructor(quarkusService) {\n      this.quarkusService = quarkusService;\n      this.WIDTH = 640;\n      this.HEIGHT = 480;\n      this.captures = [];\n      this.isRegistered = false;\n    }\n\n    ngAfterViewInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.setupDevices();\n      });\n    }\n\n    setupDevices() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n          try {\n            this.stream = yield navigator.mediaDevices.getUserMedia({\n              video: true\n            });\n\n            if (this.stream) {\n              this.video.nativeElement.srcObject = this.stream;\n              this.video.nativeElement.play();\n              this.error = null;\n            } else {\n              this.error = \"You have no output video device\";\n            }\n          } catch (e) {\n            this.error = e;\n          }\n        }\n      });\n    }\n\n    stopBothVideoAndAudio() {\n      this.stream.getTracks().forEach(function (track) {\n        if (track.readyState == 'live') {\n          track.stop();\n        }\n      });\n    }\n\n    capture() {\n      this.drawImageToCanvas(this.video.nativeElement);\n      this.captures.push(this.canvas.nativeElement.toDataURL(\"image/png\"));\n      this.isCaptured = true;\n      this.stopBothVideoAndAudio();\n      fetch(this.canvas.nativeElement.toDataURL(\"image/png\")).then(res => res.blob()).then(blob => {\n        this.quarkusService.register(blob).subscribe(data => {\n          console.log(data);\n          this.isRegistered = true;\n        });\n      });\n    }\n\n    drawImageToCanvas(image) {\n      this.canvas.nativeElement.getContext(\"2d\").drawImage(image, 0, 0, this.WIDTH, this.HEIGHT);\n    }\n\n    ngOnInit() {}\n\n  }\n\n  CaptureComponent.ɵfac = function CaptureComponent_Factory(t) {\n    return new (t || CaptureComponent)(i0.ɵɵdirectiveInject(i1.QuarkusService));\n  };\n\n  CaptureComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CaptureComponent,\n    selectors: [[\"app-capture\"]],\n    viewQuery: function CaptureComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.video = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvas = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"reg-container\", 4, \"ngIf\"], [1, \"video-container\"], [\"id\", \"video\", \"autoplay\", \"\", 3, \"width\", \"height\"], [\"video\", \"\"], [\"id\", \"canvas\", 3, \"width\", \"height\"], [\"canvas\", \"\"], [1, \"snap-container\"], [\"id\", \"capture\", \"mat-raised-button\", \"\", \"color\", \"primary\", 1, \"capture-button\", 3, \"click\"], [1, \"reg-container\"], [\"class\", \"reg-complete\", 3, \"diameter\", \"strokeWidth\", 4, \"ngIf\"], [\"class\", \"reg-complete\", 4, \"ngIf\"], [1, \"reg-complete\", 3, \"diameter\", \"strokeWidth\"], [1, \"reg-complete\"]],\n    template: function CaptureComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CaptureComponent_div_0_Template, 9, 12, \"div\", 0);\n        i0.ɵɵtemplate(1, CaptureComponent_div_1_Template, 4, 2, \"div\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", !ctx.isCaptured);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCaptured);\n      }\n    },\n    directives: [i2.NgIf, i3.MatButton, i4.MatProgressSpinner],\n    styles: [\".snap-container[_ngcontent-%COMP%]{margin:auto;text-align:center}.list-unstyled[_ngcontent-%COMP%]{list-style:none}.list-unstyled[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{display:inline-block;padding:5px 10px;cursor:pointer}.show[_ngcontent-%COMP%]{padding:2em;display:block;margin:auto}.hide[_ngcontent-%COMP%]{display:none}.capture-button[_ngcontent-%COMP%], .video-container[_ngcontent-%COMP%]{margin:auto}.large-text[_ngcontent-%COMP%]{font-size:xx-large}.reg-complete[_ngcontent-%COMP%]{margin:auto;color:#4e4e4e;font-size:xx-large;padding:1em;text-align:center}.reg-container[_ngcontent-%COMP%]{height:30%;width:98%;color:#3d3d3d;background-color:#fff0;font-size:xx-large;margin:auto;position:absolute;top:0;bottom:0;left:0;right:0}\"]\n  });\n  return CaptureComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}