{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nlet RegisteredUsersViewComponent = class RegisteredUsersViewComponent {\n  /**\r\n   * Set the paginator and sort after the view init since this component will\r\n   * be able to query its view for the initialized paginator and sort.\r\n   */\n  constructor(quarkusService, changeDetectorRefs) {\n    this.quarkusService = quarkusService;\n    this.changeDetectorRefs = changeDetectorRefs;\n    this.displayedColumns = ['Name', 'ID', \"Date\", \"Time\", 'Active', 'Marked For Deletion'];\n    this.tempgreen = \"#32a852\";\n  }\n\n  ngAfterViewInit() {\n    const users = [];\n    var ele = {\n      \"id\": \"223432\",\n      \"name\": \"test\",\n      \"active\": true,\n      \"markedForDeletion\": false,\n      \"date\": \"03-03-2022\",\n      \"time\": \"10:12:12\"\n    };\n\n    for (let index = 0; index < 100; index++) {\n      users.push(ele);\n    }\n\n    this.dataSource = new MatTableDataSource(users);\n    this.dataSource.paginator = this.paginator;\n    this.dataSource.sort = this.sort; //  this.quarkusService.getAttendence().subscribe(data=>{\n    //    data.forEach(element => {\n    //      var date = new Date(Date.parse(element.createdAt));\n    //      var date_str=date.getDate()+\"-\"+(date.getMonth()+1)+\"-\"+date.getFullYear();\n    //      var time_str=date.getHours()+\":\"+date.getMinutes()+\":\"+date.getSeconds();\n    //      Object.assign(element, {date: date_str});\n    //      Object.assign(element, {time: time_str});\n    //      users.push(element);\n    //      console.log(element);\n    //      this.dataSource = new MatTableDataSource(users);\n    //      this.dataSource.paginator = this.paginator;\n    //      this.dataSource.sort = this.sort;\n    //    });\n    //  });\n    // Assign the data to the data source for the table to render\n  }\n\n  applyFilter(filterValue) {\n    filterValue = filterValue.trim(); // Remove whitespace\n\n    filterValue = filterValue.toLowerCase(); // Datasource defaults to lowercase matches\n\n    this.dataSource.filter = filterValue;\n  }\n\n};\n\n__decorate([ViewChild(MatPaginator)], RegisteredUsersViewComponent.prototype, \"paginator\", void 0);\n\n__decorate([ViewChild(MatSort)], RegisteredUsersViewComponent.prototype, \"sort\", void 0);\n\nRegisteredUsersViewComponent = __decorate([Component({\n  selector: 'app-registered-users-view',\n  templateUrl: './registered-users-view.component.html',\n  styleUrls: ['./registered-users-view.component.css']\n})], RegisteredUsersViewComponent);\nexport { RegisteredUsersViewComponent };","map":null,"metadata":{},"sourceType":"module"}